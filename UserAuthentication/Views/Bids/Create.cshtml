@model UserAuthentication.Models.Bid

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Bids", FormMethod.Post, new { enctype = "multiPart/form-data" })) 
{
            @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Bid</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
                    window.onload = function () {
        alert("@ViewBag.Message");
    }
        </script>
    }
    @*<div class="form-group">
            @Html.LabelFor(model => model.userId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.userId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.userName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.projecId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.projecId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.projecId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.setBid, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.setBid, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.setBid, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Skills, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Skills, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Skills, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CV, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*<label class="form-group" for="customFile">Default file input example</label>*@

            @*@<img src="~/Images/@Model.picture" name="Image"/>*@
            @*<img src="~/Images/@Model.Document" name="Document" height="50" />*@
            <input type="file" name="Image" class="form-group" id="customFile"  />
            @*@Html.ValidationMessageFor(model => model.picture, "", new { @class = "text-danger" })*@
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
    
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index","Projects")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
