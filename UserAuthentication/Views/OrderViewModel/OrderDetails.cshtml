@model UserAuthentication.Models.OrderViewModel


@{
    ViewBag.Title = "OrderDetails";
}

<h2>OrderDetails</h2>

<style>
    body {
        background: #eee;
    }

    .card {
        box-shadow: 0 20px 27px 0 rgb(0 0 0 / 5%);
    }

    .card {
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 0 solid rgba(0,0,0,.125);
        border-radius: 1rem;
    }

    .text-reset {
        --bs-text-opacity: 1;
        color: inherit !important;
    }

    a {
        color: #5465ff;
        text-decoration: none;
    }
</style>
<div class="container">
    <div class="btn-group sort-btn">
        <button class="btn btn-primary dropdown-toggle" style="position:relative; left: 709px;" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Sort</button>
        <!--<button class="btn btn-primary dropdown-toggle" data-sort="none"><i class="fa fa-sort"></i></button>--><!-- .dropdown-toggle adds rounded borders and reduces padding. It does not trigger dropdowns. -->
        <ul class="dropdown-menu" style="left: 709px;">
            <li><a href="#" tabindex="-1" onclick="sort()" data-type="alpha">latest order</a></li>
            @*<li><a href="#" tabindex="-1" data-type="numeric">Date</a></li>*@
        </ul>
    </div>
</div>
@Html.Partial("_OrderDetails", Model);
@section Scripts{
    <script>
        function sort() {
            debugger;
            $.ajax({
                type: "get",
                url: "/OrderViewModel/Sort",
                success: function (data) {
                    alert('Successfully data recieved');
                    console.log(data);

                },
                error: function () {
                    alert('failed to received the data');
                    console.log('failed');
                }
            })
        }
    </script>
} 