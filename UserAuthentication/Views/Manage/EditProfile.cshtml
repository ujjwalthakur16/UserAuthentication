@*@model UserAuthentication.Models.EditProfileViewModel*@
@model UserAuthentication.Models.ApplicationUser
@{
    ViewBag.Title = "EditProfile";
}

<style>
    body {
        margin-top: 20px;
        background-color: #f2f6fc;
        color: #69707a;
    }

    .img-account-profile {
        height: 10rem;
    }

    .rounded-circle {
        border-radius: 50% !important;
    }

    .card {
        box-shadow: 0 0.15rem 1.75rem 0 rgb(33 40 50 / 15%);
    }

        .card .card-header {
            font-weight: 500;
        }

    .card-header:first-child {
        border-radius: 0.35rem 0.35rem 0 0;
    }

    .card-header {
        padding: 1rem 1.35rem;
        margin-bottom: 0;
        background-color: rgba(33, 40, 50, 0.03);
        border-bottom: 1px solid rgba(33, 40, 50, 0.125);
    }

    .form-control, .dataTable-input {
        display: block;
        width: 100%;
        padding: 0.875rem 1.125rem;
        font-size: 0.875rem;
        font-weight: 400;
        line-height: 1;
        color: #69707a;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #c5ccd6;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: 0.35rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .nav-borders .nav-link.active {
        color: #0061f2;
        border-bottom-color: #0061f2;
    }

    .nav-borders .nav-link {
        color: #69707a;
        border-bottom-width: 0.125rem;
        border-bottom-style: solid;
        border-bottom-color: transparent;
        padding-top: 0.5rem;
        padding-bottom: 0.5rem;
        padding-left: 0;
        padding-right: 0;
        margin-left: 1rem;
        margin-right: 1rem;
    }
</style>

@using (Html.BeginForm("EditProfile", "Manage", FormMethod.Post, new { enctype = "multiPart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="container-xl px-4 mt-4">
        <!-- Account page navigation-->
        <div class="row">
            <div class="col-sm-4">
                <!-- Profile picture card-->
                <div class="card mb-4 mb-xl-0" style=" padding-bottom: 12px;">
                    <div class="card-header">Profile Picture</div>
                    <div class="card-body text-center">
                        <!-- Profile picture image-->
                        @if (Model.Picture != null)
                        {
                            <img class="img-account-profile rounded-circle mb-2" style=" width: 115px;" src="~/Images/@Model.Picture" alt="">
                        }
                        else
                        {
                            <img class="img-account-profile rounded-circle mb-2" src="http://bootdey.com/img/Content/avatar/avatar1.png" alt="">
                        }
                        <!-- Profile picture help block-->
                        <div class="small font-italic text-muted mb-4" style=" height: 38px;">JPG or PNG no larger than 5 MB</div>
                        <!-- Profile picture upload button-->
                        <input type="file" name="Image" class="form-group" id="customFile" style=" margin-left: 86px;" />
                        @*<button class="btn btn-primary" type="button">Upload new image</button>*@
                    </div>
                </div>
            </div>
            <div class="col-sm-8" style=" font-size: 19px;">
                <!-- Account details card-->
                <div class="card mb-4">
                    <div class="card-header">Account Details</div>
                    <div class="card-body" style=" margin-left: 15px; ">
                        <form>
                            <!-- Form Group (username)-->
                            <div class="mb-3">
                                <label class="small mb-1" for="UserName">Username</label>
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", style = "font-size: 15px;" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger", @Value = Model.UserName })
                            </div>
                            <!-- Form Row-->
                            <div class="row gx-3 mb-3">
                                <!-- Form Group (first name)-->
                                <div class="col-md-6">
                                    <label class="small mb-1" for="FirstName">First name</label>
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", style = "font-size: 15px;" } })
                                </div>
                                <!-- Form Group (last name)-->
                                <div class="col-md-6">
                                    <label class="small mb-1" for="LastName">Last name</label>
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", style = "font-size: 15px;" } })
                                </div>
                            </div>
                            <!-- Form Row -->
                            <div class="row gx-3 mb-3">
                                <!-- Form Group (email address)-->
                                <div class="col-md-6">
                                    <label class="small mb-1" for="EmailAddress">Email address</label>
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", style = "font-size: 15px;" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                                </div>
                                <!-- Form Group (location)-->
                                <div class="col-md-6">
                                    <label class="small mb-1" for="State">Address</label>
                                    @Html.DropDownListFor(model => model.State, new List<SelectListItem> {
          new SelectListItem { Text ="Punjab"  },
           new SelectListItem { Text ="UP"  },
            new SelectListItem { Text ="Himachal"},
            new SelectListItem { Text ="MP"  },
      }, "--select State --", new { @class = "form-control", style = "font-size: 15px;" })
                                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <!-- Form Row-->
                            <div class="row gx-3 mb-3">
                                <!-- Form Group (phone number)-->
                                <div class="col-md-6">
                                    <label class="small mb-1" for="Phone">Phone number</label>
                                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", style = "font-size:15px;" } })
                                </div>
                                <!-- Form Group (birthday)-->
                                <div class="col-md-6" style=" margin-top: 3px; display: grid; ">
                                    <label class="small mb-1" for="FullAddress">Full Address</label>
                                    @*@Html.EditorFor(model => model.FullAddress, new { htmlAttributes = new { @class = "form-control", style = "font-size:15px;" } })*@
                                    @Html.TextAreaFor(model => model.FullAddress, new { htmlAttributes = new { @class = "form-control", style = "font-size:15px;height: 45px;" } })
                                </div>

                            </div>
                            <button class="btn btn-primary " type="submit" value="Save" style=" margin-top: 10px; margin-bottom: 10px;">Save changes</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}